<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>GildedRoseKata-5</groupId>
	<artifactId>GildedRoseKata-5</artifactId>
	<version>1.0-SNAPSHOT</version>
	<properties>
		<hamcrest.version>1.3</hamcrest.version>
		<junit.version>4.12</junit.version>
		<mockito.version>1.9.5</mockito.version>
		<cucumber.version>1.1.6</cucumber.version>
		<approvals.version>0.13</approvals.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.approvaltests</groupId>
			<artifactId>Approvals</artifactId>
			<version>${approvals.version}</version>
			<scope>system</scope>
			<systemPath>${basedir}/lib/ApprovalTests.013/ApprovalTests.jar</systemPath>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>

		<dependency>
			<groupId>net.java.quickcheck</groupId>
			<artifactId>quickcheck</artifactId>
			<version>0.6</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.pholser</groupId>
			<artifactId>junit-quickcheck-core</artifactId>
			<version>0.5-beta-1</version>
		</dependency>
		<dependency>
			<groupId>com.pholser</groupId>
			<artifactId>junit-quickcheck-generators</artifactId>
			<version>0.5-beta-1</version>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<!-- or whatever version you use -->
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<includes>
						<include>**/*Test.java</include>
						<include>**/*Should.java</include>
					</includes>
				</configuration>
			</plugin>

<!--
    mutationCoverage goal
    The mutation coverage goal analyses all classes in the codebase that match the target tests and target classes filters.
    It can be run directly from the commandline
    $ mvn org.pitest:pitest-maven:mutationCoverage
    This will output an html report to target/pit-reports/YYYYMMDDHHMI.
    To speed-up repeated analysis of the same codebase set the withHistory parameter to true.
    $ mvn -DwithHistory org.pitest:pitest-maven:mutationCoverage
    
    scmMutationCoverage goal
    The scm mutation coverage goal analyses only classes that match the filters and the source file has a given status within the project source control system (by default ADDED or MODIFIED). This provides a quick way to check the coverage of changes prior to checking code in / pushing code to a repository.
    
    $ mvn org.pitest:pitest-maven:scmMutationCoverage -Dinclude=ADDED,UNKNOWN -DmutationThreshold=85
-->
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>1.1.7</version>
				<configuration>
					<targetClasses>
						<param>com.gildedrose*</param>
					</targetClasses>
					<targetTests>
						<param>com.gildedrose*</param>
					</targetTests>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
